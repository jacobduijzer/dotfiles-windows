general:
  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: true

  # Whether to jump the cursor between windows focused by the WM.
  cursor_follows_focus: true

  # Whether to switch back and forth between the previously focused workspace
  # when focusing the current workspace.
  toggle_workspace_on_refocus: true

  # Whether to show floating windows as always on top.
  show_floating_on_top: false

  # Amount to move floating windows by (eg. when using `alt+<hjkl>` on a floating window)
  floating_window_move_amount: "5%"

  # Whether to center new floating windows.
  center_new_floating_windows: true

  # *Strongly* recommended to set to 'false'. Whether to globally enable/disable
  # window transition animations (on minimize, close, etc). Set to 'unchanged'
  # to make no setting changes.
  window_animations: "false"

gaps:
  # Gap between adjacent windows.
  inner_gap: "10px"

  # Gap between windows and the screen edge.
  outer_gap: "10px"

# Highlight active/inactive windows with a colored border.
# ** Exclusive to Windows 11 due to API limitations.
focus_borders:
  active:
    enabled: true
    color: "#FF8E0D"

  inactive:
    enabled: false
    color: "#ff0000"

bar:
  height: "40px"
  position: "top"
  opacity: 1.0
  background: "#20242cc4"
  foreground: "#ffffff"
  font_family: "JetBrainsMonoNL NF"
  font_size: "16px"
  padding: "4px 6px"
  offset_x: "0"
  offset_y: "0"
  border_radius: "0"

  components_left:
    - type: "clock"
      # Documentation on formatting date/time string:
      # https://learn.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings
      time_formatting: "  HH:mm:ss   ddd MMM d"

  components_center:
    - type: "workspaces"
      focused_workspace_background: "#ffffff33"
      displayed_workspace_background: "#00000033"
      default_workspace_background: "transparent"

  components_right:
    - type: "volume"
      label_low: "󰕿 {volume_level}% "
      label_medium: "󰖀 {volume_level}% "
      label_high: "󰕾 {volume_level}% "
      label_mute: "󰖁 {volume_level}% "
    - type: "battery"
      label_draining: "󱟞 {battery_level}% remaining"
      label_power_saver: "󱃌 {battery_level}% (power saver)"
      label_charging: "  {battery_level}%"
    
workspaces:
  - name: "1"
    bind_to_monitor: 2
  - name: "2"
    bind_to_monitor: 2
  - name: "3"
    bind_to_monitor: 2
  - name: "4"
    bind_to_monitor: 2
  - name: "5"
    bind_to_monitor: 2
  - name: "6"
    bind_to_monitor: 2
  - name: "7"
    bind_to_monitor: 1
  - name: "8"
    bind_to_monitor: 1
  - name: "9"
    bind_to_monitor: 1
  - name: "10"
    bind_to_monitor: 1

window_rules:
  # Task Manager requires admin privileges to manage and should be ignored unless running
  # the WM as admin.
  - command: "ignore"
    match_process_name: "/Taskmgr|ScreenClippingHost/"

  # Launches system dialogs as floating by default (eg. File Explorer save/open dialog).
  - command: "set floating"
    match_class_name: "#32770"

  # Do not manage picture-in-picture windows for browsers. Note that the default is for
  # English; change `match_title` to the window's title if you use another language.
  - command: "ignore"
    match_title: "[Pp]icture.in.[Pp]icture"
    match_class_name: "Chrome_WidgetWin_1|MozillaDialogClass"

  # Some applications (eg. Steam) have borders that extend past the normal border size.
  - command: "resize borders 0px -7px -7px -7px"
    match_process_name: "steam"

  # Move some windows to specific workspaces
  - command: "move to workspace 8"
    match_process_name: "Ferdium"
  - command: "move to workspace 9"
    match_process_name: "Slack"
  - command: "move to workspace 10"
    match_process_name: "ms-teams"

binding_modes:
  - name: "resize"
    keybindings:
      # Resize focused window by a percentage or pixel amount.
      - command: "resize width -2%"
        bindings: ["H", "Left"]
      - command: "resize width +2%"
        bindings: ["L", "Right"]
      - command: "resize height +2%"
        bindings: ["K", "Up"]
      - command: "resize height -2%"
        bindings: ["J", "Down"]
      # Press enter/escape to return to default keybindings.
      - command: "binding mode none"
        bindings: ["Escape", "Enter"]

keybindings:
  # Shift focus in a given direction.
  - command: "focus left"
    bindings: ["RControlKey+H", "RControlKey+Left"]
  - command: "focus right"
    bindings: ["RControlKey+L", "RControlKey+Right"]
  - command: "focus up"
    bindings: ["RControlKey+K", "RControlKey+Up"]
  - command: "focus down"
    bindings: ["RControlKey+J", "RControlKey+Down"]

  # Move focused window in a given direction.
  - command: "move left"
    bindings: ["RControlKey+Shift+H", "RControlKey+Shift+Left"]
  - command: "move right"
    bindings: ["RControlKey+Shift+L", "RControlKey+Shift+Right"]
  - command: "move up"
    bindings: ["RControlKey+Shift+K", "RControlKey+Shift+Up"]
  - command: "move down"
    bindings: ["RControlKey+Shift+J", "RControlKey+Shift+Down"]

  # Resize focused window by a percentage or pixel amount.
  - command: "resize width -2%"
    binding: "RControlKey+U"
  - command: "resize width +2%"
    binding: "RControlKey+P"
  - command: "resize height +2%"
    binding: "RControlKey+O"
  - command: "resize height -2%"
    binding: "RControlKey+I"

  # As an alternative to the resize keybindings above, resize mode enables resizing via
  # HJKL or arrow keys. The binding mode is defined above with the name "resize".
  - command: "binding mode resize"
    binding: "RControlKey+R"

  # Change tiling direction. This determines where new tiling windows will be inserted.
  - command: "tiling direction toggle"
    binding: "RControlKey+V"

  # Change focus between floating / tiling windows.
  - command: "focus mode toggle"
    binding: "RControlKey+Space"

  # Change the focused window to be floating / tiling.
  - command: "toggle floating"
    binding: "RControlKey+Shift+Space"

  # Change the focused window to be maximized / unmaximized.
  - command: "toggle maximized"
    binding: "RControlKey+X"

  # Minimize focused window.
  - command: "set minimized"
    binding: "RControlKey+M"

  # Close focused window.
  - command: "close"
    binding: "RControlKey+Shift+Q"

  # Kill GlazeWM process safely.
  - command: "exit wm"
    binding: "RControlKey+Shift+E"

  # Re-evaluate configuration file.
  - command: "reload config"
    binding: "RControlKey+Shift+R"

  # Launch CMD terminal (alternatively `exec wt` or `exec %ProgramFiles%/Git/git-bash.exe`
  # to start RControlKeydows Terminal and Git Bash respectively.
  - command: "exec cmd"
    binding: "RControlKey+Enter"

  # TODO: Find out if this is even possible with windows workspaces
  - command: "exec C:/Users/Jacob/scoop/apps/vivaldi/current/Application/vivaldi.exe"
    binding: "RControlKey+Shift+Enter"

  # Focus the workspace that last had focus.
  - command: "focus workspace recent"
    binding: "RControlKey+Y"

  # Focus the next/previous workspace defined in `workspaces` config.
  - command: "focus workspace next"
    binding: "RControlKey+T"
  - command: "focus workspace prev"
    binding: "RControlKey+Shift+T"

  # Change focus to a workspace defined in `workspaces` config.
  - command: "focus workspace 1"
    binding: "RControlKey+1"
  - command: "focus workspace 2"
    binding: "RControlKey+2"
  - command: "focus workspace 3"
    binding: "RControlKey+3"
  - command: "focus workspace 4"
    binding: "RControlKey+4"
  - command: "focus workspace 5"
    binding: "RControlKey+5"
  - command: "focus workspace 6"
    binding: "RControlKey+6"
  - command: "focus workspace 7"
    binding: "RControlKey+7"
  - command: "focus workspace 8"
    binding: "RControlKey+8"
  - command: "focus workspace 9"
    binding: "RControlKey+9"
  - command: "focus workspace 10"
    binding: "RControlKey+0"

  # Move focused workspace to a monitor in a given direction.
  - command: "move workspace left"
    binding: "RControlKey+A"
  - command: "move workspace right"
    binding: "RControlKey+F"
  - command: "move workspace up"
    binding: "RControlKey+D"
  - command: "move workspace down"
    binding: "RControlKey+S"

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move to workspace 1", "focus workspace 1"]
    binding: "RControlKey+Shift+1"
  - commands: ["move to workspace 2", "focus workspace 2"]
    binding: "RControlKey+Shift+2"
  - commands: ["move to workspace 3", "focus workspace 3"]
    binding: "RControlKey+Shift+3"
  - commands: ["move to workspace 4", "focus workspace 4"]
    binding: "RControlKey+Shift+4"
  - commands: ["move to workspace 5", "focus workspace 5"]
    binding: "RControlKey+Shift+5"
  - commands: ["move to workspace 6", "focus workspace 6"]
    binding: "RControlKey+Shift+6"
  - commands: ["move to workspace 7", "focus workspace 7"]
    binding: "RControlKey+Shift+7"
  - commands: ["move to workspace 8", "focus workspace 8"]
    binding: "RControlKey+Shift+8"
  - commands: ["move to workspace 9", "focus workspace 9"]
    bindings: ["RControlKey+Shift+9"]
  - commands: ["move to workspace 10", "focus workspace 10"]
    bindings: ["RControlKey+Shift+0"]

